<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviors="clr-namespace:Particular.ServiceInsight.Desktop.Framework.Behaviors"
                    xmlns:cnv="clr-namespace:Particular.ServiceInsight.Desktop.ValueConverters"
                    xmlns:controls="clr-namespace:Particular.ServiceInsight.Desktop.Controls"
                    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
                    xmlns:diagram="clr-namespace:ServiceInsight.SequenceDiagram.Diagram"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XAML/Geometry.xaml" />
        <ResourceDictionary Source="DarkMenus.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="Grey20Brush">#333333</SolidColorBrush>
    <SolidColorBrush x:Key="Grey40Brush">#666666</SolidColorBrush>
    <SolidColorBrush x:Key="Grey60Brush">#999999</SolidColorBrush>
    <SolidColorBrush x:Key="Grey80Brush">#CCCCCC</SolidColorBrush>
    <SolidColorBrush x:Key="Grey90Brush">#E6E6E6</SolidColorBrush>

    <cnv:CenterToolTipConverter x:Key="CenterToolTipConverter" />
    <cnv:SmartWrapConverter x:Key="SmartWrapConverter" />
    <cnv:DirectionToVisibilityConverter x:Key="LeftToVisibilityConverter" Direction="Left" />
    <cnv:DirectionToVisibilityConverter x:Key="RightToVisibilityConverter" Direction="Right" />
    <cnv:ArrowTypeToBoolConverter x:Key="IsTimeoutConverter" Type="Timeout" />
    <cnv:ArrowTypeToBoolConverter x:Key="IsEventConverter" Type="Event" />
    <cnv:ArrowTypeToBoolConverter x:Key="IsCommandConverter" Type="Command" />

    <Style x:Key="MessageIconStyle" TargetType="{x:Type controls:IconControl}">
        <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
        <Setter Property="ToolTip" Value="Command" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource PreviousData}, Converter={StaticResource IsTimeoutConverter}}" Value="True">
                <Setter Property="Data" Value="{StaticResource TimeoutGeometry}" />
                <Setter Property="ToolTip" Value="Timeout" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource PreviousData}, Converter={StaticResource IsEventConverter}}" Value="True">
                <Setter Property="Data" Value="{StaticResource EventGeometry}" />
                <Setter Property="ToolTip" Value="Event" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource PreviousData}, Converter={StaticResource IsCommandConverter}}" Value="True">
                <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
                <Setter Property="ToolTip" Value="Command" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UnderlineTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlankButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TooltipStyleForHeader" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <Style x:Key="TooltipStyleForValue" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
        <Setter Property="Margin" Value="4" />
    </Style>

    <Style x:Key="EmptyFocusVisualStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EndpointTooltipStyle" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="HorizontalOffset">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource CenterToolTipConverter}">
                    <Binding Path="PlacementTarget.ActualWidth" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Polygon HorizontalAlignment="Center"
                                 Fill="{StaticResource Grey20Brush}"
                                 Points="0,8 8,0 16,8" />
                        <Border Grid.Row="1" Background="{StaticResource Grey20Brush}">
                            <ContentPresenter Margin="8"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type diagram:EndpointTimeline}">
        <Line x:Name="Line"
              Stroke="{StaticResource Grey80Brush}"
              StrokeThickness="2"
              X1="0"
              X2="0"
              Y1="0"
              Y2="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                          AncestorType={x:Type diagram:DiagramVisualItem}},
                           Path=Height}" />

    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:Handler}">
        <Rectangle Width="14"
                   Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                   AncestorType={x:Type diagram:DiagramVisualItem}},
                                    Path=Height}"
                   HorizontalAlignment="Center"
                   Fill="{StaticResource Grey60Brush}">
            <Rectangle.ToolTip>
                <ToolTip Background="{StaticResource Grey20Brush}" Placement="Right">
                    <Grid Width="250">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
                                <Setter Property="Margin" Value="4" />
                            </Style>
                        </Grid.Resources>
                        <TextBlock Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Processing Time:"
                                   Visibility="{Binding ProcessingTime,
                                                        TargetNullValue=Collapsed}" />
                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding ProcessingTime,
                                                  Converter={StaticResource TimeSpanHumanizedConverter}}"
                                   Visibility="{Binding ProcessingTime,
                                                        TargetNullValue=Collapsed}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Handler For:" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Name,
                                                  Converter={StaticResource SmartWrapConverter}}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Saga:"
                                   Visibility="{Binding PartOfSaga,
                                                        TargetNullValue=Collapsed}" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding PartOfSaga}"
                                   Visibility="{Binding PartOfSaga,
                                                        TargetNullValue=Collapsed}" />
                    </Grid>
                </ToolTip>
            </Rectangle.ToolTip>
        </Rectangle>
    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:EndpointItem}">

        <Border x:Name="Root"
                Width="260"
                Margin="15,15,15,0"
                Background="Transparent"
                BorderBrush="{StaticResource Grey90Brush}"
                BorderThickness="0,0,0,6">

            <!--  Endpoint Tooltip  -->
            <Border.ToolTip>
                <ToolTip Style="{StaticResource EndpointTooltipStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Name:" />
                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding FullName}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="NSB Version:" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Version,
                                                  TargetNullValue='Not Available'}" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Host:" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Host,
                                                  TargetNullValue='Not Known'}" />
                    </Grid>
                </ToolTip>
            </Border.ToolTip>

            <!--  Endpoint Title  -->
            <Border Margin="30,0,30,-6"
                    BorderBrush="{StaticResource Grey60Brush}"
                    BorderThickness="0,0,0,6">
                <Grid Margin="8"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Path Width="18"
                          Height="18"
                          Margin="2 0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource EndpointGeometry}"
                          Fill="{StaticResource Grey40Brush}"
                          Stretch="Fill" />

                    <TextBlock Grid.Column="1"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="{Binding Name,
                                              Converter={StaticResource SmartWrapConverter}}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="Wrap" />
                </Grid>
            </Border>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type diagram:DiagramVisualItem}}}" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="Black" />
            </DataTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:Arrow}">
        <StackPanel>
            <Button x:Name="TopLine"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource BlankButtonStyle}">
                <i:Interaction.Behaviors>
                    <behaviors:DropDownButtonBehavior />
                </i:Interaction.Behaviors>

                <Button.ContextMenu>
                    <ContextMenu Style="{StaticResource DarkContextMenuStyle}">
                        <MenuItem Command="{Binding RetryMessageCommand,
                                                    ElementName=Root}"
                                  CommandParameter="{Binding SelectedMessage,
                                                             ElementName=Root}"
                                  Header="Retry message"
                                  Style="{StaticResource DarkMenuItemStyle}" />
                        <MenuItem Command="{Binding CopyConversationIDCommand,
                                                    ElementName=Root}"
                                  CommandParameter="{Binding SelectedMessage,
                                                             ElementName=Root}"
                                  Header="Copy conversation ID"
                                  Style="{StaticResource DarkMenuItemStyle}" />
                        <MenuItem Command="{Binding CopyMessageURICommand,
                                                    ElementName=Root}"
                                  CommandParameter="{Binding SelectedMessage,
                                                             ElementName=Root}"
                                  Header="Copy message URI"
                                  Style="{StaticResource DarkMenuItemStyle}" />
                        <MenuItem Command="{Binding SearchByMessageIDCommand,
                                                    ElementName=Root}"
                                  CommandParameter="{Binding SelectedMessage,
                                                             ElementName=Root}"
                                  Header="Search by message ID"
                                  Style="{StaticResource DarkMenuItemStyle}" />
                    </ContextMenu>
                </Button.ContextMenu>

                <StackPanel Orientation="Horizontal">
                    <controls:IconControl x:Name="MessageTypeIcon"
                                          Width="16"
                                          Height="16"
                                          Margin="2 0"
                                          Foreground="{StaticResource Grey40Brush}"
                                          Style="{StaticResource MessageIconStyle}" />

                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="{StaticResource Grey40Brush}"
                               Padding="5 0"
                               Style="{StaticResource UnderlineTextBlockStyle}"
                               Text="{Binding Name}" />

                    <Path Width="4"
                          Height="4"
                          Margin="2,0,2,3"
                          VerticalAlignment="Bottom"
                          Data="{StaticResource DownArrow}"
                          Fill="{StaticResource Grey40Brush}"
                          Stretch="Fill" />
                </StackPanel>
            </Button>
            <Grid>
                <Grid.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" />
                            <TextBlock Text="{Binding Type}" />
                        </StackPanel>
                    </ToolTip>
                </Grid.ToolTip>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Ellipse Grid.Row="0"
                         Grid.Column="0"
                         Width="10"
                         Height="10"
                         Fill="{StaticResource Grey60Brush}"
                         Visibility="{Binding Direction,
                                              Converter={StaticResource LeftToVisibilityConverter}}" />
                <Path Grid.Row="0"
                      Grid.Column="1"
                      Width="10"
                      Height="10"
                      Data="{StaticResource LeftArrow}"
                      Fill="{StaticResource Grey20Brush}"
                      Stretch="Fill"
                      Visibility="{Binding Direction,
                                           Converter={StaticResource LeftToVisibilityConverter}}" />
                <Line x:Name="Line"
                      Grid.Row="0"
                      Grid.Column="2"
                      VerticalAlignment="Center"
                      Stroke="{StaticResource DiagramEdgeForegroundBrush}"
                      StrokeThickness="3"
                      X1="0"
                      X2="{Binding Width}"
                      Y1="0"
                      Y2="0" />
                <Path Grid.Row="0"
                      Grid.Column="3"
                      Width="10"
                      Height="10"
                      Data="{StaticResource RightArrow}"
                      Fill="{StaticResource Grey20Brush}"
                      Stretch="Fill"
                      Visibility="{Binding Direction,
                                           Converter={StaticResource RightToVisibilityConverter}}" />
                <Ellipse Grid.Row="0"
                         Grid.Column="4"
                         Width="10"
                         Height="10"
                         Fill="{StaticResource Grey60Brush}"
                         Visibility="{Binding Direction,
                                              Converter={StaticResource RightToVisibilityConverter}}" />
            </Grid>
        </StackPanel>
    </DataTemplate>

    <Style TargetType="{x:Type diagram:DiagramControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <diagram:DiagramSurface x:Name="DiagramSurface"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="#01FFFFFF"
                                            IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type diagram:DiagramVisualItem}">
                    <Setter diag:PresentationTraceSources.TraceLevel="High" Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}}" />
                    <Setter diag:PresentationTraceSources.TraceLevel="High" Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type diagram:DiagramVisualItem}">
                                <ContentPresenter x:Name="Content" />
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Content" Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="10"
                                                                  ShadowDepth="4"
                                                                  Color="Gray" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type diagram:DiagramControl}">
                    <Border>
                        <Border.Background>
                            <LinearGradientBrush Opacity=".3" StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="1" Color="GhostWhite" />
                            </LinearGradientBrush>
                        </Border.Background>

                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Border x:Name="ContentBorder">
                                <Border.Background>
                                    <VisualBrush TileMode="Tile"
                                                 Viewbox="0,0,50,50"
                                                 ViewboxUnits="Absolute"
                                                 Viewport="0,0,50,50"
                                                 ViewportUnits="Absolute">
                                        <VisualBrush.Visual>
                                            <Rectangle Width="50"
                                                       Height="50"
                                                       Stroke="Gray"
                                                       StrokeDashArray="5 3"
                                                       StrokeThickness="0.5" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                                <ItemsPresenter x:Name="ItemsPresenter" />
                            </Border>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowGrid" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
