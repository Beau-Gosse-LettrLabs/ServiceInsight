<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:beh="clr-namespace:Particular.ServiceInsight.Desktop.Framework.Behaviors"
                    xmlns:controls="clr-namespace:Particular.ServiceInsight.Desktop.Controls"
                    xmlns:converter="clr-namespace:ServiceInsight.SequenceDiagram.Converter"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
                    xmlns:diagram="clr-namespace:ServiceInsight.SequenceDiagram.Diagram"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XAML/Geometry.xaml" />
        <ResourceDictionary Source="DarkMenus.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Colors and Brushes  -->
    <SolidColorBrush x:Key="FailedHandler">Red</SolidColorBrush>
    <SolidColorBrush x:Key="Grey20Brush">#333333</SolidColorBrush>
    <SolidColorBrush x:Key="Grey40Brush">#666666</SolidColorBrush>
    <SolidColorBrush x:Key="Grey60Brush">#999999</SolidColorBrush>
    <SolidColorBrush x:Key="Grey80Brush">#CCCCCC</SolidColorBrush>
    <SolidColorBrush x:Key="Grey90Brush">#E6E6E6</SolidColorBrush>

    <converter:CenterToolTipConverter x:Key="CenterToolTipConverter" />
    <converter:SmartWrapConverter x:Key="SmartWrapConverter" />
    <converter:ArrowTypeToVisibilityConverter x:Key="IsLocalSendOrTimeoutConverter" />

    <Style x:Key="MessageIconStyle" TargetType="{x:Type controls:IconControl}">
        <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
        <Setter Property="ToolTip" Value="Command" />
        <Style.Triggers>
            <Trigger Property="Type" Value="Timeout">
                <Setter Property="Data" Value="{StaticResource TimeoutGeometry}" />
                <Setter Property="ToolTip" Value="Timeout" />
            </Trigger>
            <Trigger Property="Type" Value="Event">
                <Setter Property="Data" Value="{StaticResource EventGeometry}" />
                <Setter Property="ToolTip" Value="Event" />
            </Trigger>
            <Trigger Property="Type" Value="Command">
                <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
                <Setter Property="ToolTip" Value="Command" />
            </Trigger>
            <Trigger Property="Type" Value="Local">
                <Setter Property="Data" Value="{StaticResource LoopBackGeometry}" />
                <Setter Property="ToolTip" Value="Local Send" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UnderlineTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlankToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlankButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TooltipStyleForHeader" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <Style x:Key="TooltipStyleForValue" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
        <Setter Property="Margin" Value="4" />
    </Style>

    <Style x:Key="EmptyFocusVisualStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EndpointTooltipStyle" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="HorizontalOffset">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource CenterToolTipConverter}">
                    <Binding Path="PlacementTarget.ActualWidth" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Polygon HorizontalAlignment="Center"
                                 Fill="{StaticResource Grey20Brush}"
                                 Points="0,8 8,0 16,8" />
                        <Border Grid.Row="1" Background="{StaticResource Grey20Brush}">
                            <ContentPresenter Margin="8"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate DataType="{x:Type diagram:EndpointTimeline}">
        <Line x:Name="Line"
              SnapsToDevicePixels="True"
              Stroke="{StaticResource Grey80Brush}"
              StrokeThickness="2"
              X1="0"
              X2="0"
              Y1="0"
              Y2="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                          AncestorType={x:Type diagram:DiagramVisualItem}},
                           Path=Height}" />

    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:Handler}">
        <Border x:Name="RootBorder"
                Width="14"
                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type diagram:DiagramVisualItem}},
                                 Path=Height}"
                HorizontalAlignment="Center"
                Background="{StaticResource Grey60Brush}"
                SnapsToDevicePixels="True">

            <controls:IconControl x:Name="ErrorIcon"
                                  Width="12"
                                  Height="12"
                                  Data="{StaticResource ErrorIcon}"
                                  Foreground="White"
                                  Visibility="Hidden" />

            <Border.ToolTip>
                <ToolTip Background="{StaticResource Grey20Brush}"
                         HorizontalOffset="5"
                         Placement="Right"
                         Visibility="{Binding Name,
                                              TargetNullValue=Collapsed}">
                    <Grid Width="250">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
                                <Setter Property="Margin" Value="4" />
                            </Style>
                        </Grid.Resources>
                        <TextBlock Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Processing Time:"
                                   Visibility="{Binding ProcessingTime,
                                                        TargetNullValue=Collapsed}" />
                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding ProcessingTime,
                                                  Converter={StaticResource TimeSpanHumanizedConverter}}"
                                   Visibility="{Binding ProcessingTime,
                                                        TargetNullValue=Collapsed}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Handler For:" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Name,
                                                  Converter={StaticResource SmartWrapConverter}}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Saga:"
                                   Visibility="{Binding PartOfSaga,
                                                        TargetNullValue=Collapsed}" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding PartOfSaga}"
                                   Visibility="{Binding PartOfSaga,
                                                        TargetNullValue=Collapsed}" />
                    </Grid>
                </ToolTip>
            </Border.ToolTip>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding State}" Value="Fail">
                <Setter TargetName="RootBorder" Property="Background" Value="{StaticResource FailedHandler}" />
                <Setter TargetName="ErrorIcon" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:EndpointItem}">

        <Border Width="260"
                Margin="15,15,15,0"
                Background="Transparent"
                BorderBrush="{StaticResource Grey90Brush}"
                BorderThickness="0,0,0,6"
                SnapsToDevicePixels="True">

            <!--  Endpoint Tooltip  -->
            <Border.ToolTip>
                <ToolTip Style="{StaticResource EndpointTooltipStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Name:" />
                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding FullName}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="NSB Version:" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Version,
                                                  TargetNullValue='Not Available'}" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Host:" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Host,
                                                  TargetNullValue='Not Known'}" />
                    </Grid>
                </ToolTip>
            </Border.ToolTip>

            <!--  Endpoint Title  -->
            <Border Margin="30,0,30,-6"
                    BorderBrush="{StaticResource Grey60Brush}"
                    BorderThickness="0,0,0,6">
                <Grid Margin="8"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Path Width="18"
                          Height="18"
                          Margin="2 0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource EndpointGeometry}"
                          Fill="{StaticResource Grey40Brush}"
                          Stretch="Fill" />

                    <TextBlock Grid.Column="1"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="{Binding Name,
                                              Converter={StaticResource SmartWrapConverter}}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="Wrap" />
                </Grid>
            </Border>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="LeftToRightArrow" DataType="{x:Type diagram:Arrow}">
        <Grid x:Name="Root" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Popup x:Name="FailedMessagePopup"
                   PlacementTarget="{Binding ElementName=DropDownButton}"
                   StaysOpen="False">
                <Border MaxWidth="455" Background="Black">
                    <Grid Margin="0,6,6,6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="3*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.ColumnSpan="2"
                                    Margin="6,0,6,6"
                                    Orientation="Horizontal"
                                    Visibility="{Binding Path=Status,
                                                         Converter={StaticResource EnumToVisibilityConverter},
                                                         ConverterParameter='Failed, RepeatedFailure'}">
                            <controls:IconControl x:Name="FailedMessageTypeIcon"
                                                  Width="16"
                                                  Height="16"
                                                  Margin="2 0"
                                                  Foreground="{StaticResource Grey60Brush}"
                                                  Style="{StaticResource MessageIconStyle}" />

                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Foreground="{StaticResource Grey60Brush}"
                                       Padding="5 0"
                                       Text="{Binding Name}" />
                        </StackPanel>

                        <Border Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource Grey20Brush}"
                                Visibility="{Binding Path=Status,
                                                     Converter={StaticResource EnumToVisibilityConverter},
                                                     ConverterParameter='Failed, RepeatedFailure'}" />

                        <StackPanel Grid.Row="1" Margin="0,1,0,0">
                            <MenuItem Command="{Binding RetryMessageCommand}"
                                      Header="Retry message"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <MenuItem Command="{Binding CopyConversationIDCommand}"
                                      Header="Copy conversation ID"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <MenuItem Command="{Binding CopyMessageURICommand}"
                                      Header="Copy message URL"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <MenuItem Command="{Binding SearchByMessageIDCommand}"
                                      Header="Search by message ID"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <StackPanel.Triggers>
                                <EventTrigger RoutedEvent="MenuItem.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="FailedMessagePopup" Storyboard.TargetProperty="IsOpen">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </StackPanel.Triggers>
                        </StackPanel>

                        <StackPanel Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="6"
                                    Visibility="{Binding Path=Status,
                                                         Converter={StaticResource EnumToVisibilityConverter},
                                                         ConverterParameter='Failed, RepeatedFailure'}">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                    <Rectangle Width="4"
                                               Height="12"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Fill="White" />
                                    <Path Width="16"
                                          Height="16"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource FailedGeometry}"
                                          Fill="Red"
                                          Stretch="Fill" />
                                </Grid>

                                <Button Margin="6,0"
                                        Command="{Binding DisplayExceptionDetailsCommand}"
                                        Style="{StaticResource BlankButtonStyle}">
                                    <TextBlock FontWeight="Bold"
                                               Foreground="Red"
                                               Style="{StaticResource UnderlineTextBlockStyle}"
                                               Text="{Binding SelectedMessage.ExceptionType}" />
                                </Button>
                            </StackPanel>

                            <TextBlock Margin="0,6,0,0"
                                       Foreground="{StaticResource Grey60Brush}"
                                       Text="{Binding SelectedMessage.ExceptionMessage}"
                                       TextWrapping="Wrap" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Popup>

            <Line x:Name="Line"
                  Grid.Row="0"
                  Grid.Column="0"
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stroke="{StaticResource DiagramEdgeForegroundBrush}"
                  StrokeThickness="2"
                  X1="0"
                  X2="{Binding Width}" />
            <Path Grid.Row="0"
                  Grid.Column="1"
                  Width="10"
                  Height="10"
                  Data="{StaticResource RightArrow}"
                  Fill="{StaticResource Grey20Brush}"
                  Stretch="Fill" />
            <Ellipse Grid.Row="0"
                     Grid.Column="2"
                     Width="10"
                     Height="10"
                     Fill="{StaticResource Grey60Brush}"
                     Visibility="{Binding Type,
                                          Converter={StaticResource IsLocalSendOrTimeoutConverter}}" />

            <Button x:Name="DropDownButton"
                    Grid.Row="0"
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource BlankButtonStyle}">

                <StackPanel Orientation="Horizontal">
                    <controls:IconControl Width="16"
                                          Height="16"
                                          Margin="2 0"
                                          Foreground="{StaticResource Grey40Brush}"
                                          Style="{StaticResource MessageIconStyle}"
                                          Type="{Binding Type}" />

                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="{StaticResource Grey40Brush}"
                               Padding="5 0"
                               Style="{StaticResource UnderlineTextBlockStyle}"
                               Text="{Binding Name}" />

                    <Path Width="4"
                          Height="4"
                          Margin="2,0,2,3"
                          VerticalAlignment="Bottom"
                          Data="{StaticResource DownArrow}"
                          Fill="{StaticResource Grey40Brush}"
                          Stretch="Fill" />
                </StackPanel>
            </Button>
        </Grid>
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Button.Click" SourceName="DropDownButton">
                <BeginStoryboard>
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="FailedMessagePopup" Storyboard.TargetProperty="IsOpen">
                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="RightToLeftArrow" DataType="{x:Type diagram:Arrow}">
        <Grid SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Popup x:Name="FailedMessagePopup"
                   PlacementTarget="{Binding ElementName=DropDownButton}"
                   StaysOpen="False">
                <Border MaxWidth="455" Background="Black">
                    <Grid Margin="0,6,6,6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="3*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.ColumnSpan="2"
                                    Margin="6,0,6,6"
                                    Orientation="Horizontal"
                                    Visibility="{Binding Path=Status,
                                                         Converter={StaticResource EnumToVisibilityConverter},
                                                         ConverterParameter='Failed, RepeatedFailure'}">
                            <controls:IconControl x:Name="FailedMessageTypeIcon"
                                                  Width="16"
                                                  Height="16"
                                                  Margin="2 0"
                                                  Foreground="{StaticResource Grey60Brush}"
                                                  Style="{StaticResource MessageIconStyle}" />

                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Foreground="{StaticResource Grey60Brush}"
                                       Padding="5 0"
                                       Text="{Binding Name}" />
                        </StackPanel>

                        <Border Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource Grey20Brush}"
                                Visibility="{Binding Path=Status,
                                                     Converter={StaticResource EnumToVisibilityConverter},
                                                     ConverterParameter='Failed, RepeatedFailure'}" />

                        <StackPanel Grid.Row="1" Margin="0,1,0,0">
                            <MenuItem Command="{Binding RetryMessageCommand}"
                                      Header="Retry message"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <MenuItem Command="{Binding CopyConversationIDCommand}"
                                      Header="Copy conversation ID"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <MenuItem Command="{Binding CopyMessageURICommand}"
                                      Header="Copy message URL"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <MenuItem Command="{Binding SearchByMessageIDCommand}"
                                      Header="Search by message ID"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                            <StackPanel.Triggers>
                                <EventTrigger RoutedEvent="MenuItem.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="FailedMessagePopup" Storyboard.TargetProperty="IsOpen">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </StackPanel.Triggers>
                        </StackPanel>

                        <StackPanel Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="6"
                                    Visibility="{Binding Path=Status,
                                                         Converter={StaticResource EnumToVisibilityConverter},
                                                         ConverterParameter='Failed, RepeatedFailure'}">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                    <Rectangle Width="4"
                                               Height="12"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Fill="White" />
                                    <Path Width="16"
                                          Height="16"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource FailedGeometry}"
                                          Fill="Red"
                                          Stretch="Fill" />
                                </Grid>

                                <Button Margin="6,0"
                                        Command="{Binding DisplayExceptionDetailsCommand}"
                                        Style="{StaticResource BlankButtonStyle}">
                                    <TextBlock FontWeight="Bold"
                                               Foreground="Red"
                                               Style="{StaticResource UnderlineTextBlockStyle}"
                                               Text="{Binding SelectedMessage.ExceptionType}" />
                                </Button>
                            </StackPanel>

                            <TextBlock Margin="0,6,0,0"
                                       Foreground="{StaticResource Grey60Brush}"
                                       Text="{Binding SelectedMessage.ExceptionMessage}"
                                       TextWrapping="Wrap" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Popup>

            <Button x:Name="DropDownButton"
                    Grid.Row="0"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource BlankButtonStyle}">


                <StackPanel Orientation="Horizontal">
                    <controls:IconControl Width="16"
                                          Height="16"
                                          Margin="2 0"
                                          Foreground="{StaticResource Grey40Brush}"
                                          Style="{StaticResource MessageIconStyle}"
                                          Type="{Binding Type}" />

                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="{StaticResource Grey40Brush}"
                               Padding="5 0"
                               Style="{StaticResource UnderlineTextBlockStyle}"
                               Text="{Binding Name}" />

                    <Path Width="4"
                          Height="4"
                          Margin="2,0,2,3"
                          VerticalAlignment="Bottom"
                          Data="{StaticResource DownArrow}"
                          Fill="{StaticResource Grey40Brush}"
                          Stretch="Fill" />
                </StackPanel>
            </Button>

            <Ellipse Grid.Row="0"
                     Grid.Column="1"
                     Width="10"
                     Height="10"
                     Fill="{StaticResource Grey60Brush}"
                     Visibility="{Binding Type,
                                          Converter={StaticResource IsLocalSendOrTimeoutConverter}}" />
            <Path Grid.Row="0"
                  Grid.Column="2"
                  Width="10"
                  Height="10"
                  Data="{StaticResource LeftArrow}"
                  Fill="{StaticResource Grey20Brush}"
                  Stretch="Fill" />

            <Line x:Name="Line"
                  Grid.Row="0"
                  Grid.Column="3"
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stroke="{StaticResource DiagramEdgeForegroundBrush}"
                  StrokeThickness="3"
                  X1="0"
                  X2="{Binding Width}" />
        </Grid>
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Button.Click" SourceName="DropDownButton">
                <BeginStoryboard>
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="FailedMessagePopup" Storyboard.TargetProperty="IsOpen">
                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:Arrow}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">

                    <!--  Default Template  -->
                    <Setter Property="ContentTemplate" Value="{StaticResource LeftToRightArrow}" />

                    <!--  Triggers to change Template  -->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Direction}" Value="Left">
                            <Setter Property="ContentTemplate" Value="{StaticResource RightToLeftArrow}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <Style TargetType="{x:Type diagram:DiagramControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <diagram:DiagramSurface x:Name="DiagramSurface"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="#01FFFFFF"
                                            IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type diagram:DiagramVisualItem}">
                    <Setter diag:PresentationTraceSources.TraceLevel="High" Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}}" />
                    <Setter diag:PresentationTraceSources.TraceLevel="High" Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type diagram:DiagramVisualItem}">
                                <ContentPresenter x:Name="Content" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type diagram:DiagramControl}">
                    <Border>
                        <Border.Background>
                            <LinearGradientBrush Opacity=".3" StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="1" Color="GhostWhite" />
                            </LinearGradientBrush>
                        </Border.Background>

                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Border x:Name="ContentBorder">
                                <Border.Background>
                                    <VisualBrush TileMode="Tile"
                                                 Viewbox="0,0,50,50"
                                                 ViewboxUnits="Absolute"
                                                 Viewport="0,0,50,50"
                                                 ViewportUnits="Absolute">
                                        <VisualBrush.Visual>
                                            <Rectangle Width="50"
                                                       Height="50"
                                                       Stroke="Gray"
                                                       StrokeDashArray="5 3"
                                                       StrokeThickness="0.5" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                                <ItemsPresenter x:Name="ItemsPresenter" />
                            </Border>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowGrid" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
