<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:beh="clr-namespace:Particular.ServiceInsight.Desktop.Framework.Behaviors"
                    xmlns:controls="clr-namespace:Particular.ServiceInsight.Desktop.Controls"
                    xmlns:converter="clr-namespace:ServiceInsight.SequenceDiagram.Converter"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
                    xmlns:diagram="clr-namespace:ServiceInsight.SequenceDiagram.Diagram"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XAML/Geometry.xaml" />
        <ResourceDictionary Source="/Images/Xaml/XamlIcons.xaml" />
        <ResourceDictionary Source="DarkMenus.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Colors and Brushes  -->
    <SolidColorBrush x:Key="ErrorBrush">Red</SolidColorBrush>
    <SolidColorBrush x:Key="Grey20Brush">#333333</SolidColorBrush>
    <SolidColorBrush x:Key="Grey30Brush">#444444</SolidColorBrush>
    <SolidColorBrush x:Key="Grey40Brush">#666666</SolidColorBrush>
    <SolidColorBrush x:Key="Grey60Brush">#999999</SolidColorBrush>
    <SolidColorBrush x:Key="Grey80Brush">#CCCCCC</SolidColorBrush>
    <SolidColorBrush x:Key="Grey90Brush">#E6E6E6</SolidColorBrush>
    <SolidColorBrush x:Key="Grey95Brush">#B3B3B3</SolidColorBrush>

    <Color x:Key="HighlightColor">#0B6EEF</Color>
    <Color x:Key="HoverColor">#C5DEE9</Color>

    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush">#0066CC</SolidColorBrush>
    <SolidColorBrush x:Key="SelectedForegroundBrush">#FFFFFF</SolidColorBrush>

    <converter:CenterToolTipConverter x:Key="CenterToolTipConverter" />
    <converter:SmartWrapConverter x:Key="SmartWrapConverter" />
    <converter:ElementHeightConverter x:Key="ElementHeightConverter" />

    <Style x:Key="MessageIconStyle" TargetType="{x:Type controls:IconControl}">
        <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
        <Setter Property="ToolTip" Value="Command" />
        <Style.Triggers>
            <Trigger Property="Type" Value="Timeout">
                <Setter Property="Data" Value="{StaticResource TimeoutGeometry}" />
                <Setter Property="ToolTip" Value="Timeout" />
            </Trigger>
            <Trigger Property="Type" Value="Event">
                <Setter Property="Data" Value="{StaticResource EventGeometry}" />
                <Setter Property="ToolTip" Value="Event" />
            </Trigger>
            <Trigger Property="Type" Value="Command">
                <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
                <Setter Property="ToolTip" Value="Command" />
            </Trigger>
            <Trigger Property="Type" Value="Local">
                <Setter Property="Data" Value="{StaticResource LoopBackGeometry}" />
                <Setter Property="ToolTip" Value="Local Send" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlankToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlankButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TooltipStyleForHeader" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <Style x:Key="TooltipStyleForValue" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
        <Setter Property="Margin" Value="4" />
    </Style>

    <Style x:Key="EmptyFocusVisualStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EndpointTooltipStyle" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="HorizontalOffset">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource CenterToolTipConverter}">
                    <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                    <Binding Path="PlacementTarget.ActualWidth" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Polygon HorizontalAlignment="Center"
                                 Fill="{StaticResource Grey20Brush}"
                                 Points="0,8 8,0 16,8" />
                        <Border Grid.Row="1" Background="{StaticResource Grey20Brush}">
                            <ContentPresenter Margin="8"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type diagram:MessageProcessingRoute}">
        <Grid x:Name="Root"
              Width="12"
              SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Line x:Name="Line"
                  Grid.Row="0"
                  Grid.Column="0"
                  Margin="0"
                  HorizontalAlignment="Center"
                  Stroke="Transparent"
                  StrokeThickness="2"
                  X1="0"
                  X2="0"
                  Y1="0"
                  Y2="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                              AncestorType={x:Type diagram:DiagramVisualItem}},
                               Path=Height,
                               Converter={StaticResource ElementHeightConverter}}" />
            <Path x:Name="ArrowHead"
                  Grid.Row="1"
                  Grid.Column="0"
                  Width="6"
                  Height="6"
                  Margin="-1,0,0,0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Data="{StaticResource DownArrow}"
                  Fill="Transparent"
                  Stretch="UniformToFill">
                <Path.ToolTip>
                    <ToolTip Background="{StaticResource Grey20Brush}"
                             HorizontalOffset="5"
                             Placement="Right"
                             Visibility="{Binding Name,
                                                  TargetNullValue=Collapsed}">
                        <TextBlock Margin="4"
                                   Foreground="{StaticResource Grey60Brush}"
                                   Text="{Binding Name}" />
                    </ToolTip>
                </Path.ToolTip>
            </Path>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsFocused}" Value="True">
                <Setter TargetName="ArrowHead" Property="Fill" Value="{StaticResource HighlightBrush}" />
                <Setter TargetName="Line" Property="Stroke" Value="{StaticResource HighlightBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:EndpointTimeline}">
        <Line x:Name="Line"
              SnapsToDevicePixels="True"
              Stroke="{StaticResource Grey80Brush}"
              StrokeThickness="2"
              X1="0"
              X2="0"
              Y1="0"
              Y2="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                          AncestorType={x:Type diagram:DiagramVisualItem}},
                           Path=Height,
                           Converter={StaticResource ElementHeightConverter}}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:Handler}">
        <ToggleButton Command="{Binding ChangeCurrentMessage}"
                      IsChecked="{Binding Path=IsFocused,
                                          Mode=TwoWay}"
                      beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}">
            <ToggleButton.Template>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Canvas Width="14">
                        <Border x:Name="RootBorder"
                                Width="14"
                                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                AncestorType={x:Type diagram:DiagramVisualItem}},
                                                 Path=Height}"
                                HorizontalAlignment="Center"
                                Background="{StaticResource Grey60Brush}"
                                BorderBrush="Black"
                                BorderThickness="0"
                                SnapsToDevicePixels="True">

                            <controls:IconControl x:Name="ErrorIcon"
                                                  Width="12"
                                                  Height="12"
                                                  Data="{StaticResource ErrorIcon}"
                                                  Foreground="White"
                                                  Visibility="Hidden" />

                            <Border.ToolTip>
                                <ToolTip Background="{StaticResource Grey20Brush}"
                                         HorizontalOffset="5"
                                         Placement="Right"
                                         Visibility="{Binding Name,
                                                              Converter={StaticResource StringEmptyOrNullToVisibilityConverter}}">
                                    <Grid Width="250">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
                                                <Setter Property="Margin" Value="4" />
                                            </Style>
                                        </Grid.Resources>
                                        <TextBlock Style="{StaticResource TooltipStyleForHeader}"
                                                   Text="Processing Time:"
                                                   Visibility="{Binding ProcessingTime,
                                                                        Converter={StaticResource NullToVisibilityConverter}}" />
                                        <TextBlock Grid.Row="0"
                                                   Grid.Column="1"
                                                   Style="{StaticResource TooltipStyleForValue}"
                                                   Text="{Binding ProcessingTime,
                                                                  Converter={StaticResource TimeSpanHumanizedConverter}}" />
                                        <TextBlock Grid.Row="1"
                                                   Grid.Column="0"
                                                   Style="{StaticResource TooltipStyleForHeader}"
                                                   Text="Processing Of:"
                                                   Visibility="{Binding Name,
                                                                        Converter={StaticResource StringEmptyOrNullToVisibilityConverter}}" />
                                        <TextBlock Grid.Row="1"
                                                   Grid.Column="1"
                                                   Style="{StaticResource TooltipStyleForValue}"
                                                   Text="{Binding Name,
                                                                  Converter={StaticResource SmartWrapConverter}}"
                                                   TextTrimming="CharacterEllipsis"
                                                   TextWrapping="Wrap" />
                                        <TextBlock Grid.Row="2"
                                                   Grid.Column="0"
                                                   Style="{StaticResource TooltipStyleForHeader}"
                                                   Text="Sagas Invoked:"
                                                   Visibility="{Binding PartOfSaga,
                                                                        Converter={StaticResource StringEmptyOrNullToVisibilityConverter}}" />
                                        <TextBlock x:Name="PartOfSagaValue"
                                                   Grid.Row="2"
                                                   Grid.Column="1"
                                                   Style="{StaticResource TooltipStyleForValue}"
                                                   Text="{Binding PartOfSaga}"
                                                   TextWrapping="Wrap"
                                                   Visibility="{Binding PartOfSaga,
                                                                        Converter={StaticResource StringEmptyOrNullToVisibilityConverter}}" />
                                    </Grid>
                                </ToolTip>
                            </Border.ToolTip>
                        </Border>
                        <Border x:Name="MessageTypeName"
                                Canvas.Left="{Binding ElementName=MessageType,
                                                      Path=ActualWidth,
                                                      Converter={StaticResource MathConverter},
                                                      ConverterParameter=(x*-1) - 1}"
                                Height="16">
                            <StackPanel x:Name="MessageType" Orientation="Horizontal">
                                <Image Width="14"
                                       Height="14"
                                       Margin="2,0"
                                       Opacity="0.5"
                                       VerticalAlignment="Bottom"
                                       Source="{StaticResource Loader}"
                                       Visibility="{Binding Name,
                                                            Converter={StaticResource StringEmptyOrNullToVisibilityConverter}}" />
                                <TextBlock VerticalAlignment="Center"
                                           FontFamily="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"
                                           FontSize="14"
                                           Foreground="{StaticResource Grey40Brush}"
                                           Padding="2"
                                           Text="{Binding Name}" />
                            </StackPanel>
                        </Border>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding State}" Value="Fail">
                            <Setter TargetName="RootBorder" Property="Background" Value="{StaticResource ErrorBrush}" />
                            <Setter TargetName="ErrorIcon" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition SourceName="ErrorIcon" Property="Visibility" Value="Hidden" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RootBorder" Property="Background" Value="{StaticResource HoverBrush}" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding EffectiveArrowDirection}" Value="Right">
                            <Setter TargetName="MessageTypeName" Property="Canvas.Left" Value="15" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>
        </ToggleButton>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedMessage}" Value="{x:Null}">
                <Setter Property="ToolTip" Value="Start of Conversation" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:EndpointItem}">

        <Border Width="260"
                Margin="15,15,15,0"
                Background="Transparent"
                BorderBrush="{StaticResource Grey90Brush}"
                BorderThickness="0,0,0,6"
                SnapsToDevicePixels="True">

            <!--  Endpoint Tooltip  -->
            <Border.ToolTip>
                <ToolTip Style="{StaticResource EndpointTooltipStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Name:" />
                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding FullName}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="NSB Version:" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Version,
                                                  TargetNullValue='Not Available'}" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Style="{StaticResource TooltipStyleForHeader}"
                                   Text="Host:" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="1"
                                   Style="{StaticResource TooltipStyleForValue}"
                                   Text="{Binding Host,
                                                  TargetNullValue='Not Known'}" />
                    </Grid>
                </ToolTip>
            </Border.ToolTip>

            <!--  Endpoint Title  -->
            <Border Margin="30,0,30,-6"
                    BorderBrush="{StaticResource Grey60Brush}"
                    BorderThickness="0,0,0,6">
                <Grid Margin="8"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Path Width="18"
                          Height="18"
                          Margin="2 0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource EndpointGeometry}"
                          Fill="{StaticResource Grey40Brush}"
                          Stretch="Fill" />

                    <TextBlock Grid.Column="1"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="{Binding Name,
                                              Converter={StaticResource SmartWrapConverter}}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="Wrap" />
                </Grid>
            </Border>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="LeftToRightArrow" DataType="{x:Type diagram:Arrow}">
        <Grid x:Name="Root" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <controls:SplitButton x:Name="Button"
                                  Grid.Column="2"
                                  Height="30"
                                  Margin="5,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Foreground="Black"
                                  ButtonClick="{Binding ChangeCurrentMessage}"
                                  Header="{Binding Name}"
                                  IsSelected="{Binding IsFocused,
                                                       Mode=TwoWay}"
                                  Padding="0"
                                  SnapsToDevicePixels="True"
                                  beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}">
                <controls:SplitButton.Icon>
                    <controls:IconControl x:Name="Icon"
                                          Width="16"
                                          Height="16"
                                          Margin="2 0"
                                          Foreground="{Binding Path=Foreground,
                                                               RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                          Style="{StaticResource MessageIconStyle}"
                                          Type="{Binding Type}" />
                </controls:SplitButton.Icon>
                <MenuItem x:Name="RetryMessageMenuItem"
                          Command="{Binding RetryMessageCommand}"
                          Header="Retry message"
                          Style="{StaticResource DarkMenuItemStyle}"
                          Visibility="{Binding Path=IsEnabled,
                                               RelativeSource={RelativeSource Self},
                                               Mode=OneWay,
                                               Converter={StaticResource BoolToVisibilityConverter}}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding ShowExceptionCommand}"
                          Header="Show Stacktrace"
                          Style="{StaticResource DarkMenuItemStyle}"
                          Visibility="{Binding Path=Visibility,
                                               ElementName=RetryMessageMenuItem}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding CopyConversationIDCommand}"
                          Header="Copy conversation ID"
                          Style="{StaticResource DarkMenuItemStyle}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding CopyMessageURICommand}"
                          Header="Copy message URL"
                          Style="{StaticResource DarkMenuItemStyle}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding SearchByMessageIDCommand}"
                          Header="Search by message ID"
                          Style="{StaticResource DarkMenuItemStyle}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
            </controls:SplitButton>

            <Line x:Name="Line"
                  Grid.Row="0"
                  Grid.Column="0"
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stroke="{StaticResource DiagramEdgeForegroundBrush}"
                  StrokeThickness="4"
                  X1="0"
                  X2="{Binding Width}" />
            <Path Grid.Row="0"
                  Grid.Column="1"
                  Width="10"
                  Height="15"
                  Data="{StaticResource RightArrow}"
                  Fill="{StaticResource Grey20Brush}"
                  Stretch="Fill" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RightToLeftArrow" DataType="{x:Type diagram:Arrow}">
        <Grid SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <controls:SplitButton x:Name="Button"
                                  Height="30"
                                  Margin="5,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ButtonClick="{Binding ChangeCurrentMessage}"
                                  Header="{Binding Name}"
                                  IsSelected="{Binding IsFocused,
                                                       Mode=TwoWay}"
                                  Padding="0"
                                  SnapsToDevicePixels="True"
                                  beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}">
                <controls:SplitButton.Icon>
                    <controls:IconControl x:Name="Icon"
                                          Width="16"
                                          Height="16"
                                          Margin="2 0"
                                          Foreground="{Binding Path=Foreground,
                                                               RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                          Style="{StaticResource MessageIconStyle}"
                                          Type="{Binding Type}" />
                </controls:SplitButton.Icon>
                <MenuItem x:Name="RetryMessageMenuItem"
                          Command="{Binding RetryMessageCommand}"
                          Header="Retry message"
                          Style="{StaticResource DarkMenuItemStyle}"
                          Visibility="{Binding Path=IsEnabled,
                                               RelativeSource={RelativeSource Self},
                                               Mode=OneWay,
                                               Converter={StaticResource BoolToVisibilityConverter}}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding ShowExceptionCommand}"
                          Header="Show Stacktrace"
                          Style="{StaticResource DarkMenuItemStyle}"
                          Visibility="{Binding Path=Visibility,
                                               ElementName=RetryMessageMenuItem}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding CopyConversationIDCommand}"
                          Header="Copy conversation ID"
                          Style="{StaticResource DarkMenuItemStyle}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding CopyMessageURICommand}"
                          Header="Copy message URL"
                          Style="{StaticResource DarkMenuItemStyle}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
                <MenuItem Command="{Binding SearchByMessageIDCommand}"
                          Header="Search by message ID"
                          Style="{StaticResource DarkMenuItemStyle}"
                          beh:CommandParameterHelper.CommandParameter="{Binding SelectedMessage}" />
            </controls:SplitButton>

            <Path Grid.Row="0"
                  Grid.Column="1"
                  Width="10"
                  Height="15"
                  Data="{StaticResource LeftArrow}"
                  Fill="{StaticResource Grey20Brush}"
                  Stretch="Fill" />

            <Line x:Name="Line"
                  Grid.Row="0"
                  Grid.Column="2"
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stroke="{StaticResource DiagramEdgeForegroundBrush}"
                  StrokeThickness="4"
                  X1="0"
                  X2="{Binding Width}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type diagram:Arrow}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">

                    <!--  Default Template  -->
                    <Setter Property="ContentTemplate" Value="{StaticResource LeftToRightArrow}" />

                    <!--  Triggers to change Template  -->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Direction}" Value="Left">
                            <Setter Property="ContentTemplate" Value="{StaticResource RightToLeftArrow}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <Style TargetType="{x:Type diagram:DiagramHeader}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type diagram:DiagramControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <diagram:DiagramSurface x:Name="DiagramSurface"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="#01FFFFFF"
                                            IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type diagram:DiagramVisualItem}">
                    <Setter diag:PresentationTraceSources.TraceLevel="High" Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}}" />
                    <Setter diag:PresentationTraceSources.TraceLevel="High" Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type diagram:DiagramVisualItem}">
                                <ContentPresenter x:Name="Content" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type diagram:DiagramControl}">
                    <Border>
                        <Border.Background>
                            <LinearGradientBrush Opacity=".3" StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="1" Color="GhostWhite" />
                            </LinearGradientBrush>
                        </Border.Background>

                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Border x:Name="ContentBorder">
                                <Border.Background>
                                    <VisualBrush TileMode="Tile"
                                                 Viewbox="0,0,50,50"
                                                 ViewboxUnits="Absolute"
                                                 Viewport="0,0,50,50"
                                                 ViewportUnits="Absolute">
                                        <VisualBrush.Visual>
                                            <Rectangle Width="50"
                                                       Height="50"
                                                       Stroke="Gray"
                                                       StrokeDashArray="5 3"
                                                       StrokeThickness="0.5" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                                <ItemsPresenter x:Name="ItemsPresenter" />
                            </Border>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowGrid" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>