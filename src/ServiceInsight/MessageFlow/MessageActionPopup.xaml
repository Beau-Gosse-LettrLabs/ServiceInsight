<Grid x:Class="ServiceInsight.MessageFlow.MessageActionPopup"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:cal="http://www.caliburnproject.org"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:messageFlow="clr-namespace:ServiceInsight.MessageFlow"
      Height="175"
      MinWidth="450"
      d:DataContext="{d:DesignInstance messageFlow:MessageNode}"
      mc:Ignorable="d">
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Images/Xaml/XamlIcons.xaml" />
                <ResourceDictionary>
                    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
                    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
                    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#000" />
                    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#007AC7" />

                    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FFF" />
                                <GradientStop Offset="1.0" Color="#CCC" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#CCC" />
                                <GradientStop Offset="1.0" Color="#444" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
                        <Border Name="Border">
                            <Grid>
                                <ContentPresenter Margin="6,3,6,3"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                                <Popup Name="Popup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       Placement="Bottom"
                                       PopupAnimation="Fade">
                                    <Border Name="SubmenuBorder"
                                            Background="{StaticResource WindowBackgroundBrush}"
                                            SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
                        <Border Name="Border">
                            <Grid>
                                <ContentPresenter Margin="6,3,6,3"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
                        <Border Name="Border" BorderThickness="3,0,3,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                                    <ColumnDefinition Width="13" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Name="Icon"
                                                  Margin="6,0,6,0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon" />
                                <Border Name="Check"
                                        Width="13"
                                        Height="13"
                                        Margin="6,0,6,0"
                                        Background="{StaticResource NormalBrush}"
                                        BorderBrush="{StaticResource NormalBorderBrush}"
                                        BorderThickness="1"
                                        Visibility="Collapsed">
                                    <Path Name="CheckMark"
                                          Width="7"
                                          Height="7"
                                          Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                          SnapsToDevicePixels="False"
                                          Stroke="{StaticResource GlyphBrush}"
                                          StrokeThickness="2"
                                          Visibility="Hidden" />
                                </Border>
                                <ContentPresenter Name="HeaderHost"
                                                  Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                                <TextBlock x:Name="InputGestureText"
                                           Grid.Column="2"
                                           Margin="5,2,0,2"
                                           VerticalAlignment="Center"
                                           DockPanel.Dock="Right"
                                           FontSize="10"
                                           Text="{TemplateBinding InputGestureText}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsCheckable" Value="true">
                                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
                        <Border Name="Border">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"
                                                      MinWidth="30"
                                                      SharedSizeGroup="Icon" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                                    <ColumnDefinition Width="13" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Name="Icon"
                                                  Margin="6,0,6,0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon" />
                                <Popup Name="Popup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       HorizontalOffset="-4"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       Placement="Right"
                                       PopupAnimation="Fade">
                                    <Border Name="SubmenuBorder"
                                            Background="{StaticResource WindowBackgroundBrush}"
                                            SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </Popup>
                                <ContentPresenter Name="HeaderHost"
                                                  Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                                <TextBlock x:Name="InputGestureText"
                                           Grid.Column="2"
                                           Margin="5,2,2,2"
                                           VerticalAlignment="Center"
                                           DockPanel.Dock="Right"
                                           FontSize="10"
                                           Text="{TemplateBinding InputGestureText}" />
                                <Path Grid.Column="3"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 0 0 L 0 7 L 4 3.5 Z"
                                      Fill="{StaticResource GlyphBrush}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style x:Key="ContextMenuItem" TargetType="MenuItem">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontSize" Value="12px" />
                        <Setter Property="Height" Value="26" />
                        <Style.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="MessagePropertyKey" TargetType="TextBlock">
                        <Setter Property="Margin" Value="4" />
                        <Setter Property="FontSize" Value="13px" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <Style x:Key="MessagePropertyValue" TargetType="TextBlock">
                        <Setter Property="Margin" Value="4" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="13px" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </Style>
                    <Style x:Key="MessageExceptionKey" TargetType="TextBlock">
                        <Setter Property="Margin" Value="4" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="13px" />
                        <Setter Property="Foreground" Value="Red" />
                    </Style>
                    <Style x:Key="MessageExceptionValue" TargetType="TextBlock">
                        <Setter Property="Margin" Value="4" />
                        <Setter Property="VerticalAlignment" Value="Top" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="FontSize" Value="13px" />
                        <Setter Property="Foreground" Value="Red" />
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Grid.Resources>
    <Border Name="Border"
            Margin="0,0,0,0"
            Background="Black"
            BorderThickness="5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="34" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="0"
                        Grid.ColumnSpan="2"
                        Margin="6,3,0,0"
                        Orientation="Horizontal">
                <ContentControl HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Template="{StaticResource CommandIcon}"
                                ToolTip="Command"
                                Width="22"
                                Visibility="{Binding IsCommandMessage,
                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                </ContentControl>
                <ContentControl HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Template="{StaticResource EventIcon}"
                                ToolTip="Event"
                                Width="22"
                                Visibility="{Binding IsEventMessage,
                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                </ContentControl>
                <ContentControl HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Template="{StaticResource TimeoutIcon}"
                                ToolTip="Timeout"
                                Width="22"
                                Visibility="{Binding IsTimeoutMessage,
                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                </ContentControl>
                <TextBlock FontSize="13px"
                           FontWeight="Bold"
                           Foreground="White"
                           Margin="4,0"
                           VerticalAlignment="Center"
                           TextTrimming="CharacterEllipsis"
                           ToolTip="{Binding Message.FriendlyMessageType}"
                           Text="{Binding Message.FriendlyMessageType}" />
            </StackPanel>
            <Grid Grid.Row="1"
                  Grid.Column="0"
                  Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="12" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        BorderBrush="#1E1E1E"
                        BorderThickness="0 1 0 0" />
                <MenuItem Grid.Row="1"
                          Click="OnMenuClicked"
                          Header="Retry Message"
                          Style="{StaticResource ContextMenuItem}"
                          CommandParameter="{Binding Message}"
                          Command="{Binding RetryMessageCommand}" />
                <MenuItem Grid.Row="2"
                          Click="OnMenuClicked"
                          Header="Copy Conversation Id"
                          Style="{StaticResource ContextMenuItem}"
                          CommandParameter="{Binding Message}"
                          Command="{Binding CopyConversationIDCommand}" />
                <MenuItem Grid.Row="3"
                          Click="OnMenuClicked"
                          Header="Copy Message URI"
                          Style="{StaticResource ContextMenuItem}"
                          CommandParameter="{Binding Message}"
                          Command="{Binding CopyMessageURICommand}" />
                <MenuItem Grid.Row="4"
                          Click="OnMenuClicked"
                          Header="Search by Message Id"
                          Style="{StaticResource ContextMenuItem}"
                          CommandParameter="{Binding Message}"
                          Command="{Binding SearchByMessageIDCommand}" />
            </Grid>
            <Grid Grid.Row="1"
                  Grid.Column="1"
                  Background="#1E1E1E"
                  IsSharedSizeScope="True"
                  TextBlock.Foreground="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="14" />
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="Auto" MaxWidth="280" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="12" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           Style="{StaticResource MessagePropertyKey}"
                           Text="Processing Time" />
                <TextBlock Grid.Row="1"
                           Grid.Column="2"
                           Style="{StaticResource MessagePropertyValue}"
                           Text="{Binding Message.ProcessingTime,
                                          Converter={StaticResource TimeSpanHumanizedConverter}}" />
                <TextBlock Grid.Row="2"
                           Grid.Column="1"
                           Style="{StaticResource MessagePropertyKey}"
                           Text="NSB Version" />
                <TextBlock Grid.Row="2"
                           Grid.Column="2"
                           Style="{StaticResource MessagePropertyValue}"
                           Text="{Binding NSBVersion}" />
                <StackPanel Grid.Row="3"
                            Grid.Column="1"
                            Margin="4"
                            VerticalAlignment="Top"
                            Orientation="Horizontal"
                            Visibility="{Binding ShowExceptionInfo,
                                                 Converter={StaticResource BoolToVisibilityConverter}}">
                    <ContentControl Width="16"
                                    Height="16"
                                    Template="{StaticResource Exception}" />
                    <TextBlock Style="{StaticResource MessageExceptionKey}" Text="Exception" />
                </StackPanel>

                <TextBlock Grid.Row="3"
                           Grid.Column="2"
                           MaxWidth="260"
                           Style="{StaticResource MessageExceptionValue}"
                           TextTrimming="CharacterEllipsis"
                           Visibility="{Binding ShowExceptionInfo,
                                                Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border Margin="0 0 0 2"
                            BorderBrush="Red"
                            BorderThickness="0 0 0 1">
                        <TextBlock Margin="0 0 0 -2"
                                   Foreground="Red"
                                   MouseLeftButtonUp="OnMenuClicked"
                                   Text="{Binding ExceptionMessage}"
                                   TextTrimming="CharacterEllipsis"
                                   cal:Action.TargetWithoutContext="{Binding}"
                                   cal:Message.Attach="[Event MouseLeftButtonDown]=[Action ShowException]" />
                    </Border>
                </TextBlock>
            </Grid>
        </Grid>
    </Border>
</Grid>